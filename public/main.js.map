{"version":3,"sources":["./src/app/todo-create/todo-create.component.ts","./src/app/todo-create/todo-create.component.html","./src/environments/environment.ts","./src/app/todo-list/todo-list.component.ts","./src/app/todo-list/todo-list.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/todo-selected/todo-selected.component.ts","./src/app/todo-selected/todo-selected.component.html","./src/app/app.module.ts","./src/app/header/header.component.ts","./src/app/header/header.component.html","./src/app/services/todo-service.service.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { todo } from '../models/todo';\nimport { TodoServiceService } from '../services/todo-service.service';\n\n@Component({\n  selector: 'app-todo-create',\n  templateUrl: './todo-create.component.html',\n  styleUrls: ['./todo-create.component.css']\n})\nexport class TodoCreateComponent implements OnInit {\n  constructor(public TodoService:TodoServiceService) { }\n  ngOnInit(): void {}\n  onCreateTodo(form:NgForm)\n  {\n    if(form.invalid){}\n    else{\n    this.TodoService.postTodo(form.value.todo,false).subscribe((data)=>{\n      console.log(data);\n      this.TodoService.getTodo().subscribe((data) => {\n        this.TodoService.putTodoInService(data);\n      });\n    });\n   // alert(\"Todo Added\");\n    form.resetForm();}\n  }\n}\n","<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n<link href=\"https://fonts.googleapis.com/css2?family=Anton&display=swap\" rel=\"stylesheet\">\n<mat-card>\n  <form\n    action=\"\"\n    class=\"theform\"\n    #todoform=\"ngForm\"\n    (submit)=\"onCreateTodo(todoform)\"\n  >\n    <div class=\"outerBox\">\n      <mat-form-field class=\"formfield\" hideRequiredMarker>\n        <mat-label> Todo </mat-label>\n        <input matInput ngModel name=\"todo\" type=\"text\" required />\n        <mat-icon matSuffix>done</mat-icon>\n        <mat-hint align=\"start\">Enter your <strong>Todo</strong></mat-hint>\n      </mat-form-field>\n    </div>\n    <div  class=\"outerBox\">\n\n      <button mat-raised-button type=\"submit\">\n        CREATE TODO\n      </button>\n    </div>\n  </form>\n</mat-card>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnDestroy, OnInit } from '@angular/core';\nimport { TodoServiceService } from '../services/todo-service.service';\nimport { Subscription } from 'rxjs';\nimport { todo } from '../models/todo';\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css'],\n})\nexport class TodoListComponent implements OnInit,OnDestroy {\n  todo: todo[] = [];\n  subscription = new Subscription();\n\n  constructor(public todoService: TodoServiceService) {}\n  trigger(selectedItem: string, isSelected: boolean, i: number) {\n    console.log(isSelected);\n    console.log('1');\n    if (isSelected === true) {\n      this.todoService.postSelectedItem(selectedItem,i).subscribe((data)=>{\n        this.todoService.postTodo(selectedItem,isSelected).subscribe((data)=>{});\n        console.log(data);\n        this.todoService.getSelectedItems().subscribe(data=>{\n          this.todoService.postSelectedTodoInService(data);\n        })\n      });\n    } else {\n      console.log(\"isSelected:\"+isSelected);\n      this.todoService.removeUnselectedItem(selectedItem,i).subscribe(data=>{\n        console.log(data)\n        this.todoService.postTodo(selectedItem,isSelected).subscribe(()=>{});\n        this.todoService.getSelectedItems().subscribe(data=>{\n          this.todoService.postSelectedTodoInService(data);\n        })\n      });\n    }\n  }\n  ngOnInit() {\n    console.log('inside onInit of todo list');\n    this.todoService.getTodo().subscribe((data) => {\n      this.todo = data;\n    });\n    this.subscription=this.todoService.getTodoFromService().subscribe((data)=>{\n      this.todo=data;\n    });\n  }\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-card-title>Todos </mat-card-title>\n</mat-card>\n<cdk-virtual-scroll-viewport\n  class=\"outerBox\"\n  itemSize=\"45px\"\n>\n  <label matRipple\n    class=\"innerBox\"\n    for=\"todo_{{ i }}\"\n    *cdkVirtualFor=\"let ele of todo; index as i\"\n  >\n    <strong class=\"innerItem\">{{ i + 1 }}. {{ ele.todo }} </strong>\n    <input\n      class=\"innerItem checkbox\"\n      #checkbox\n      type=\"checkbox\"\n      id=\"todo_{{ i }}\"\n      name=\"todo\"\n      (click)=\"trigger(ele.todo, checkbox.checked, i)\"\n      [checked]=\"ele.isSelected\"\n    />\n  </label>\n\n</cdk-virtual-scroll-viewport>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ProjectBluCocoon';\n}\n","<div class=\"outsideAll\">\n<app-header></app-header>\n<app-todo-create></app-todo-create>\n<div class=\"outerBlock\">\n  <div class=\"innerBlock\">\n    <app-todo-list></app-todo-list>\n  </div>\n  <div class=\"innerBlock\">\n    <app-todo-selected></app-todo-selected>\n  </div>\n</div>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\nimport { TodoServiceService } from '../services/todo-service.service';\nimport {selectedTodo} from \"../models/selectedTodo\";\nimport { CdkDragDrop, moveItemInArray} from '@angular/cdk/drag-drop';\nimport {  CdkVirtualScrollViewport } from '@angular/cdk/scrolling';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-todo-selected',\n  templateUrl: './todo-selected.component.html',\n  styleUrls: ['./todo-selected.component.css']\n})\nexport class TodoSelectedComponent implements OnInit,OnDestroy {\n  @ViewChild('virtualScroller') virtualScroller!: CdkVirtualScrollViewport;\n  selectedTodo:selectedTodo[]=[];\n  testing=[\"test 1\", \"test 2\", \"test 3\", \"test 4\"]\n  constructor(public todoService:TodoServiceService) { }\n  subscription = new Subscription();\n  ngOnInit(){\n    this.todoService.getSelectedItems().subscribe(data=>{\n      this.selectedTodo=data;\n    });\n    this.subscription=this.todoService.getSelectedTodoFromService().subscribe(data=>{\n      this.selectedTodo=data;\n    })\n  }\n  dropped(event:CdkDragDrop<selectedTodo[]>)\n  {\n    console.log(this.virtualScroller)\n    const vsStartIndex = this.virtualScroller.getRenderedRange().start;\n    moveItemInArray(this.selectedTodo, event.previousIndex + vsStartIndex, event.currentIndex + vsStartIndex);\n    this.todoService.indexingDraggedTodoBackend(this.selectedTodo).subscribe(data=>{console.log(data)});\n  }\n\n  ngOnDestroy(){\n    this.subscription.unsubscribe();\n  }\n}\n","<mat-card>\n  <mat-card-title>\n    Selected Todo\n  </mat-card-title>\n</mat-card>\n<cdk-virtual-scroll-viewport #virtualScroller itemSize=\"45px\" cdkDropList\n[cdkDropListData]=\"selectedTodo\"\n(cdkDropListDropped)=\"dropped($event)\"\n class=\"outerBox\" >\n  <li cdkDrag cdkDragLockAxis=\"y\" matRipple  class=\"innerBox li_{{i}}\" *ngFor=\"let ele of selectedTodo; index as i\">\n   <strong class=\"innerItem\">{{i+1}}. {{ ele.todo }}</strong>\n  </li>\n\n</cdk-virtual-scroll-viewport>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n//http additions\nimport { HttpClientModule } from '@angular/common/http';\n//components made by us\nimport { TodoCreateComponent } from './todo-create/todo-create.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport { TodoSelectedComponent } from './todo-selected/todo-selected.component';\nimport { HeaderComponent } from './header/header.component';\n//Services\nimport { TodoServiceService } from './services/todo-service.service';\n//CDK additions\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\n//form additions\nimport { FormsModule } from '@angular/forms';\n//Material additions\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport {MatRippleModule} from '@angular/material/core';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoCreateComponent,\n    TodoListComponent,\n    TodoSelectedComponent,\n    HeaderComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    DragDropModule,\n    MatCardModule,\n    MatInputModule,\n    MatButtonModule,\n    MatIconModule,\n    FormsModule,\n    MatListModule,\n    ScrollingModule,\n    HttpClientModule,\n    MatRippleModule\n  ],\n  providers: [TodoServiceService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\">\n<link href=\"https://fonts.googleapis.com/css2?family=DotGothic16&display=swap\" rel=\"stylesheet\">\n<div class=\"header\">\n  <img src=\"assets/image/ourlogo.png\" alt=\"nop\">\n  <p>Todo List!</p>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Observable,Subject} from \"rxjs\";\nimport {selectedTodo} from \"../models/selectedTodo\";\nimport{HttpClient} from \"@angular/common/http\";\nimport{todo} from '../models/todo';\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoServiceService {\n  private subject= new Subject<todo[]>();\n  //main todo after creation stored in todo list from backend\n  private todoList:todo[]=[];\n\n  constructor(public http: HttpClient){ }\n  //used to get the create todo list to get the todo --createtodolist\n  getTodo(){\n    return this.http.get<todo[]>(\"todo/todo\");\n  }\n  //used in todo list to get the whole todo list from service -- todo-list\n  getTodoFromService(){\n    return this.subject.asObservable();\n  }\n\n  //used in create todo list to put the todo created in service --createtodolist\n  postTodo(obtainedtodo:string,isSelected:boolean): Observable<any> {\n    let obj={todo: obtainedtodo,isSelected:isSelected};\n    console.log(\"inside post todo\")\n    return this.http.post(\"todo/todo\",obj)\n  }\n  //used in create todolist to put the whole todo list in service --create todolist\n  putTodoInService(data:todo[]){\n    console.log(\"inside post todo in service\")\n    this.todoList=data;\n    this.subject.next([...this.todoList]);\n    console.log(this.todoList);\n  }\n  //For selected List\n  //todos that are obtained from todo list after selection\n  private selectedTodos:selectedTodo[]=[];\n  private subjectSelectedList= new Subject<selectedTodo[]>();\n  //this function gets the selected elements to todo-selected component\n  getSelectedItems(){\n    return this.http.get<selectedTodo[]>(\"todo/selectedtodo\");\n  }\n  getSelectedTodoFromService(){\n    return this.subjectSelectedList.asObservable();\n  }\n  //This function gets the selected item from the selectedlist\n  postSelectedItem(selectedItem:string,i:number){\n    return this.http.post(\"todo/selectedtodo\",{todo:selectedItem,index:i});\n  }\n  //this function removes the unselected number from the selectedlist\n  removeUnselectedItem(selectedItem:string,i:number){\n    return this.http.delete(`todo/selectedtodo/${i}`);\n  }\n  //this gets called everytime a selected todo is either added or removed --todolist\n  postSelectedTodoInService(data:selectedTodo[]){\n    console.log(\"inside post todo in service\")\n    this.selectedTodos=data;\n    this.subjectSelectedList.next([...this.selectedTodos]);\n    console.log(this.selectedTodos);\n  }\n  //for storing dragged elements new index in db\n  indexingDraggedTodoBackend(selectedTodos:selectedTodo[]){\n    return this.http.post(\"todo/draggedtodo\",selectedTodos);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}